@using Photogram.WebApp.Models
@using Resources
@using System.Drawing


@{
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

@model Project

@*<nav class="navbar navbar-custom navbar-fixed-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-main-collapse">
                <i class="fa fa-bars"></i>
            </button>
            <a class="navbar-brand page-scroll" href="@Url.Action("Index", "Home")">
                <span class="brand">Müller</span> <span class="light">András</span>
            </a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse navbar-right navbar-main-collapse">
            <ul class="nav navbar-nav">
                <!-- Hidden li included to remove active class from about link when scrolled up past about section -->
                <li class="hidden">
                    <a href="#page-top"></a>
                </li>
                @if (Request.IsAuthenticated)
                {
                    <li>
                        @Html.ActionLink(Localization.Administration, "Index", "Admin")
                    </li>
                }
            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </div>
    <!-- /.container -->
</nav>*@

<header class="intro">
    <div class="intro-body">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="brand-heading">@Model.CurrentTitleText()</h1>
                    <p class="lead">@Model.CurrentDescriptionText()</p>
                </div>
            </div>
        </div>
    </div>
</header>

@foreach (var elem in Model.ProjectInclude)
{
    var isTitleExists = !string.IsNullOrEmpty(elem.Media.CurrentTitleText());
    var isDescExists = !string.IsNullOrEmpty(elem.Media.CurrentDescriptionText());
    var imgContainerClass = "col-lg-9";
    var dataContainerClass = "col-sm-4 col-lg-2";
    var aspectRatio = elem.Media.AspectRatio();

    if (1 < aspectRatio && 1.5 >= aspectRatio)
    {
        imgContainerClass = "col-sm-8 col-lg-offset-1";
    }
    else if (1 == aspectRatio)
    {
        imgContainerClass = "col-sm-6 col-sm-offset-2 col-lg-offset-3";
    }
    else if (1 > aspectRatio)
    {
        imgContainerClass = "col-sm-4 col-sm-offset-4 col-md-offset-5";
    }


    <section class="container-fluid content-section">
        <div class="row content-row">
            <div class="@imgContainerClass">
                <img class="fit-container" src="@Url.Action("Render", "Image", new { file = elem.Media.FileName })/" />
            </div>
            @if (isTitleExists || isDescExists)
            {
                <div class="@dataContainerClass">
                    @if (isTitleExists)
                    {
                        <h2>@elem.Media.CurrentTitleText()</h2>
                    }
                    @if (isDescExists)
                    {
                        <p>@elem.Media.CurrentDescriptionText()</p>
                    }
                </div>
            }
        </div>
    </section>
}

<section class="content-section text-center">
    @Html.ActionLink(Localization.Back, "Index", "Home", new { }, new { @class = "btn btn-default btn-lg" })
</section>
<nav class="hidden-print hidden-sm hidden-xs">
    <ul class="nav nav-pills nav-stacked project-sidebar"></ul>
</nav>