@using Photogram.WebApp.Models
@using Resources

@model AddGalleryViewModel

<script type="text/javascript">

            function NGonBegin(xhr) {
                $('#newGallerySubmit').button('loading');
            }

            function NGonSuccess(data, status, xhr) {

                $("#galleryModel").html(data.View1);
                $("#worksDropDown").html(data.View2);

                if (data.Success) {
                    $('#newGalleryModal').modal('hide');
                }
                else {
                    //Do something extra here with validation errors if needed.
                }

            }

            function NGonFailure(xhr, status, error) {
                response = xhr.responseJSON;
                window.location.href = response.RedirectUrl;
            }

            function NGonComplete(xhr, status) {
                $('#newGallerySubmit').button('reset');
            }

</script>

@{
    Layout = null;

    AjaxOptions ajaxOptions = new AjaxOptions
    {
        OnBegin = "NGonBegin(xhr)",
        OnSuccess = "NGonSuccess(data, status, xhr)",
        //OnFailure = "NGonFailure(xhr, status, error)",
        //UpdateTargetId = "galleryModel",
        OnComplete = "NGonComplete(xhr, status)"
    };
}


@*@using (Html.BeginForm("Add", "Gallery", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))*@
@using (Ajax.BeginForm("Add", "Gallery", ajaxOptions, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="myModalLabel">@WebResources.NewGallery</h4>
    </div>
    <div class="modal-body">
        <div class="container-fluid">
            @if (!Html.ViewData.ModelState.IsValid)
            {
                foreach (ModelState modelState in ViewData.ModelState.Values)
                {
                    foreach (ModelError error in modelState.Errors)
                    {
                        <div class="alert alert-danger" role="alert">
                            @error.ErrorMessage
                        </div>
                    }
                }
            }
            <div class="form-group">
                @Html.LabelFor(x => x.Title)
                @Html.TextBoxFor(x => x.Title, new { @class = "form-control", placeholder = WebResources.Title })
                @Html.ValidationMessageFor(x => x.Title)
            </div>
            <div>

            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Year)
                @Html.DropDownListFor(x => x.Year, Model.Years,
                            new { @class = "form-control", placeholder = WebResources.Year })
                @Html.ValidationMessageFor(x => x.Year)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Description)
                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = 6, placeholder = WebResources.Description })
                @Html.ValidationMessageFor(x => x.Description)
            </div>
            <div>
                @Html.LabelFor(x => x.Language)
                @Html.DropDownListFor(x => x.Language, Model.Languages,
                            new { @class = "form-control", placeholder = WebResources.Language })
                @Html.ValidationMessageFor(x => x.Language)
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">@WebResources.Cancel</button>
        <button id="newGallerySubmit" type="submit" data-loading-text="@WebResources.SaveChanges..." class="btn btn-primary">@WebResources.SaveChanges</button>
    </div>
}
