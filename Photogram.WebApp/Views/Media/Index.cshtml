@using Resources
@using Photogram.WebApp.Models

@{
    ViewBag.Title = Localization.ContentMgmt;
    Layout = "~/Views/Shared/_LayoutContMgmt.cshtml";
}

@model MediaViewModel


<div class="navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("AM", "Index", "Home", null, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            @*@Html.Partial("_LoginPartial")
                @Html.Partial("_AdminPartial")*@
            <form class="navbar-form navbar-left">
                <input id="fileupload"
                       class="filestyle"
                       type="file"
                       multiple="multiple"
                       data-buttontext="@Localization.Upload"
                       data-badge="false"
                       data-input="false"
                       data-icon="false"
                       accept="image/*"
                       title="@Localization.UploadDesc">
                <button id="btn-delete"
                        type="button"
                        class="btn btn-operation btn-danger"
                        disabled>@Localization.Delete</button>
                <div class="btn-group">
                    <div class="btn-group">
                        <button id="project-select" type="button"
                                class="btn btn-operation btn-default dropdown-toggle"
                                data-toggle="dropdown" aria-haspopup="true"
                                aria-expanded="false" disabled>
                            @Localization.Setup <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var project in Model.Projects)
                            {
                                <li>
                                    <a href="#" class="project-link" id="@project.Id" onclick="setProject(@project.Id)">
                                        @project.Title.FirstOrDefault().Text
                                    </a>
                                </li>
                            }
                            <li class="divider"></li>
                            <li>
                                <a href="#" class="project-link" id="-1" onclick="setProject(-1)">
                                    @Localization.NoProject
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="btn-group">
                        <button id="project-filter" type="button"
                                class="btn btn-default dropdown-toggle"
                                data-toggle="dropdown" aria-haspopup="true"
                                aria-expanded="false">
                            @Localization.Filter <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                        @foreach (var project in Model.Projects)
                        {
                            <li>
                                <a href="#" class="project-link" id="@project.Id" onclick="setProject(@project.Id)">
                                    @project.Title.FirstOrDefault().Text
                                </a>
                            </li>
                        }
                            <li class="divider"></li>
                            <li>
                                <a href="#" class="project-link" id="-1" onclick="setProject(-1)">
                                    @Localization.NoProject
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </form>
            <ul class="nav navbar-nav navbar-right">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        @Localization.Works<span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu" role="menu" id="worksDropDown">
                        @{ Html.RenderAction("WorksDropDown", "Home"); }
                    </ul>
                </li>
                <li>@Html.ActionLink(Localization.About, "About", "Home")</li>
                <li>@Html.ActionLink(Localization.Contact, "Contact", "Home")</li>
            </ul>
        </div>
    </div>
</div>
<div id="contmgmt-container" class="container-fluid body-content">
    <div id="nodata-info" class="alert alert-info" role="alert">
        <strong>@Localization.Oops</strong> @Localization.NoData
    </div>
    <div id="pckry-container">
        @foreach (var elem in Model.Medias)
        {
            Html.RenderAction("Thumbnail", new { mediaId = elem.Id });
        }
    </div>
    <hr />
    <footer>
        <p>&copy; @DateTime.Now.Year - andrasmuller.com</p>
    </footer>
</div>

    @section scripts{
        <script type="text/javascript">

            var animOptions = {
                duration: 400,
                easing: 'swing'
            };

            docReady(function () {

                imagesLoaded('#pckry-container', function () {
                    var container = document.querySelector('#pckry-container');

                    $(container).fadeIn();

                    var pckry = new Packery(container, {
                        itemSelector: '.pckry-item'
                    });

                    pckry.on('removeComplete', function (event, removedItems) {
                        setWarningVisibility();
                    });
                });

                setWarningVisibility();

                $('#pckry-container').selectable({
                    filter: '.pckry-item',
                    cancel: '.noselect',
                    selected: function (event, ui) {
                        if ($('.ui-selected').size() > 0) {
                            $('.btn-operation').prop('disabled', false);
                        }
                    },
                    unselected: function (event, ui) {
                        if ($('.ui-selected').size() == 0) {
                            $('.btn-operation').prop('disabled', true);
                        }
                    }
                });

                var uploadfiles = document.querySelector('#fileupload');

                uploadfiles.addEventListener('change', function () {
                    var files = this.files;
                    for (var i = 0; i < files.length; ++i) {
                        uploadFile(this.files[i], 'Media/AjaxUpload');
                    }
                }, false);

            });
            
            function uploadFile(file, url) {
                var xhr = new XMLHttpRequest();
                var fd = new FormData();

                xhr.open("POST", url, true);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        rdata = JSON.parse(xhr.responseText);
                        console.log(rdata.FileName + ' has successfully uploaded. id: ' + rdata.Id);
                        
                        var elem = createThumbnail(rdata.FileName, rdata.Id);
                        var container = document.querySelector('#pckry-container');
                        var pckry = Packery.data(container);
                    }
                }

                fd.append("upload_file", file);
                xhr.send(fd);
            }

            function createThumbnail(fileName, fileId, projectId){
                var thumb = document.createElement('div');
                thumb.className = 'pckry-item';
                thumb.id = fileId;
                
                var img = document.createElement('img');
                img.className = 'pckry-img';

                var magnifier = document.createElement('a');
                magnifier.className = ' btn btn-default btn-xs thumb-magnifier noselect';

                return 'ok';
            }

            function addThumbToPckry(imgUrl){
                $('<img class="thumb" id="xxx" />').attr('src', imgUrl).load(function() {

                });
            }

            function setWarningVisibility() {
                var warning = $('#nodata-info');
                $.ajax({
                    url: '@Url.Content("~/Media/MediaCount")',
                    type: 'POST',
                    success :
                        function (data, status, xhr) {
                            if (data.Count == 0) {
                                warning.fadeIn(animOption);
                            }
                            else {
                                warning.fadeOut(animOptions);
                            }
                        }
                });
            }

            $('#btn-delete').click(function () {
                $('.ui-selected').each(function (index, element) {
                    $.ajax({
                        url: '@Url.Content("~/Media/DeleteJson")',
                        type: 'POST',
                        data: {
                            mediaId: element.id
                        },
                        success:
                            function (data, status, xhr) {
                                var pckry = $('#pckry-container').packery();
                                pckry.packery('remove', element);
                                pckry.packery();
                            },
                        error:
                            function () {
                                console.log('delete error: ' + element.id);
                            }
                    });
                });
                $('.btn-operation').prop('disabled', true);
            });

            function renderProjectName(projId, renderElem){
                $.ajax({
                    url: '@Url.Content("~/Project/ProjectName")',
                    type: 'POST',
                    data: {
                        projectId: projId
                    },
                    success:
                        function (rdata, status, xhr) {
                            renderElem.innerHtml(rdata.ProjectTitle);
                        },
                    error:
                        function () {
                            
                        }
                });
            }

            function setProject(id) {
                $('.ui-selected').each(function (index, element) {
                    $.ajax({
                        url: '@Url.Content("~/Media/SetProject")',
                        type: 'POST',
                        data: {
                            mediaId: element.id,
                            projectId: id
                        },
                        success:
                            function (rdata, status, xhr) {
                                var label = $(element).children('.label');
                                label.hide();
                                label.html(rdata.ProjectTitle);
                                console.log('setproject data: ' + rdata);

                                if (!rdata.InProject) {
                                    label.switchClass('label-info', 'label-warning');
                                }
                                else {
                                    label.switchClass('label-warning', 'label-info');
                                }

                                label.fadeIn(animOptions);

                                console.log('setProject success: ' + element.id);
                            },
                        error:
                            function () {
                                console.log('setProject error: ' + element.id);
                            }
                    });
                });

                return false;
            }

            function lightView(contentUrl) {

                var viewer = $('#lightview-viewer');
                if (viewer.size() == 0) {
                    var view = $('<div id="lightview-viewer"/>');
                    var shadow = $('<div id="lightview-shadow"/>');

                    $(shadow).click(function (e) {
                        closeLightView();
                    });

                    $('body').append(shadow);
                    $('body').append(view);
                }

                viewer.empty();

                if (contentUrl != null) {
                    viewer.append('<img src="Content/ajax-loader.gif">');

                    var img = $("<img />").attr('class', 'lightview-image').attr('src', contentUrl).load(function () {
                        if (!this.complete || typeof this.naturalWidth == "undefined" || this.naturalWidth == 0) {
                            alert('broken image!');
                        } else {
                            viewer.empty();
                            viewer.append(img);
                        }
                    });
                }

                //viewer.css('top', $(window).scrollTop() + 100 + 'px');

                viewer.show();
                $('#lightview-shadow').show();
            }

            function closeLightView() {
                $('#lightview-viewer').hide();
                $('#lightview-shadow').hide();

                $('#lightview-viewer').empty();
            }

</script>
    }







